package common.Authorization;import common.ApiResponse.ApiFailure;import org.apache.commons.lang3.StringUtils;import play.Logger;import play.libs.Json;import play.libs.typedmap.TypedKey;import play.mvc.Action;import play.mvc.Http;import play.mvc.Result;import java.util.concurrent.CompletionStage;import static common.Attrs.AUTH_HEADER;import static java.util.concurrent.CompletableFuture.supplyAsync;public class PermissionBasedAuthorizationAction extends Action<PermissionBasedAuthorization> {    private final Logger.ALogger logger = Logger.of("common.PermissionBaseAuthorization");    @Override    public CompletionStage<Result> call(Http.Request request) {        logger.info("[" + request.id() + "] " + " json" + request.header("X-AUTH"));        String token = request.header(AUTH_HEADER).orElse(StringUtils.EMPTY);        if (token.isEmpty()) {            return supplyAsync(() -> unauthorized(Json.toJson(new ApiFailure("token should not empty"))));        }        return delegate.call(request.addAttr(TypedKey.create("user"), "7485"));    }}